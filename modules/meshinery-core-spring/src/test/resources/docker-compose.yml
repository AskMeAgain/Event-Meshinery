version: '2'
services:
  db:
    image: mysql
    environment:
      MYSQL_USER: 'user'
      MYSQL_PASSWORD: 'password'
      MYSQL_ROOT_PASSWORD: 'password'
      MYSQL_DATABASE: 'db'
    ports:
      - "3306:3306"
  zookeeper:
    image: wurstmeister/zookeeper
  kafdrop:
    image: obsidiandynamics/kafdrop
    ports:
      - "9000:9000"
    environment:
      KAFKA_BROKERCONNECT: "kafka:29092"
  kafka:
    image: wurstmeister/kafka
    ports:
      - "9092:9092"
    environment:
      DOCKER_API_VERSION: 1.22
      KAFKA_LISTENERS: LISTENER_EXTERNAL://kafka:9092,LISTENER_INTERNAL://kafka:29092
      KAFKA_ADVERTISED_LISTENERS: LISTENER_EXTERNAL://localhost:9092,LISTENER_INTERNAL://kafka:29092
      KAFKA_INTER_BROKER_LISTENER_NAME: LISTENER_INTERNAL
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: LISTENER_EXTERNAL:PLAINTEXT, LISTENER_INTERNAL:PLAINTEXT
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
  prometheus:
    image: prom/prometheus:v2.1.0
      #volumes:
      #  - ./prometheus/:/etc/prometheus/
    # - prometheus_data:/prometheus
    ports:
      - 9090:9090
  grafana:
    image: grafana/grafana
    depends_on:
      - prometheus
    ports:
      - 3000:3000
    #volumes:
    #  - grafana_data:/var/lib/grafana
    #  - ./grafana/provisioning/:/etc/grafana/provisioning/